apiVersion: v1
kind: Service
metadata:
  name: patroni
  labels:
    component: patroni-client
spec:
  selector:
    component: patroni-patroni
  ports:
  - port: 5432
  clusterIP: None

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: patroni
  labels:
    component: patroni-patroni
spec:
  serviceName: patroni
  replicas: 3
  template:
    metadata:
      name: patroni
      labels:
        component: patroni-patroni
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "restore",
            "image": "abkfenris/atomicdb",
            "imagePullPolicy": "Always",
            "args": ["restore"],
            "env": [
              {
                "name": "WALE_ENVDIR",
                "value": "/opt/wale"
              },
              {
                "name": "PG_DATA",
                "value": "/pgdata/data"
              },
              {
                "name": "VERBOSE_ENTRYPOINT",
                "value": "true"
              },
              {
                "name": "POD_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.name"
                  }
                }
              }
            ],
            "volumeMounts": [
              {
                "name": "pgdata",
                "mountPath": "/pgdata"
              },
              {
                "name": "patroni-config",
                "mountPath": "/tmp/patroni",
                "readOnly": true
              },
              {
                "name": "wale-secret",
                "mountPath": "/tmp/wale",
                "readOnly": true
              },
              {
                "name": "wale-config",
                "mountPath": "/opt/wale",
                "readOnly": true
              }
            ]
          }
        ]'
    spec:
      containers:
      - name: backup
        image: abkfenris/atomicdb
        args: 
        - backup
        imagePullPolicy: Always
        env:
        - name: WALE_ENVDIR
          value: /opt/wale
        - name: PG_DATA
          value: /pgdata/data
        - name: WALE_CRON_TIMING
          value: '*/15 * * * *' # backup every 15 min
        volumeMounts:
        - name: pgdata
          mountPath: /pgdata
        - mountPath: /tmp/patroni
          name: patroni-config
          readOnly: true
        - mountPath: /tmp/wale
          name: wale-secret
          readOnly: true
        - mountPath: /opt/wale
          name: wale-config
          readOnly: true
      - name: patroni
        image: abkfenris/atomicdb
        imagePullPolicy: Always
        args:
        - postgres
        env:
        - name: CLUSTERNAME
          value: patroni01
        - name: POD_GROUP
          value: patroni
        - name: SUPERPASS
          valueFrom:
            secretKeyRef:
              name: patroni
              key: password-superuser
        - name: ADMINPASS
          valueFrom:
            secretKeyRef:
              name: patroni
              key: password-admin
        - name: REPLICATIONPASS
          valueFrom:
            secretKeyRef:
              name: patroni
              key: password-standby
        - name: PATRONI_TEMPLATE_PATH
          value: /opt/pghoard/patroni.template.yml
        - name: POD_NS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: ETCD_HOST
          value: etcd.$(POD_NS).svc.cluster.local
        ports:
        - containerPort: 8008
        - containerPort: 5432
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: pgdata
          mountPath: /pgdata
        - mountPath: /tmp/patroni
          name: patroni-config
          readOnly: true
        - mountPath: /opt/pghoard
          name: pghoard-config
          readOnly: true
        - mountPath: /tmp/pghoard
          name: pghoard-secret
          readOnly: true
        - mountPath: /tmp/wale
          name: wale-secret
          readOnly: true
        - mountPath: /opt/wale
          name: wale-config
          readOnly: true
      volumes:
      - name: patroni-config
        secret:
          secretName: patroni
      - name: wale-config
        configMap:
          name: wale-config
      - name: pgdata
        emptyDir: {}
      - name: pghoard-config
        configMap:
          name: patroni-pghoard
          items:
          - key: pghoard.json
            path: pghoard.json
          - key: patroni.template.yml
            path: patroni.template.yml
          - key: pghoard_restore.py
            path: pghoard_restore.py
          - key: recovery.conf
            path: recovery.conf
      - name: pghoard-secret
        secret:
          secretName: pghoard-google
      - name: wale-secret
        secret:
          secretName: patroni-wale