apiVersion: v1
data:
  patroni.template.yml: |-
    bootstrap:
      dcs:
        loop_wait: 5
        maximum_lag_on_failover: 104857600
        postgresql:
          parameters:
            hot_standby: 'on'
            log_destination: 'stderr'
            logging_collector: 'off'
            max_connections: 100
            max_replication_slots: 12
            max_wal_senders: 12
            wal_keep_segments: 8
            wal_level: hot_standby
            wal_log_hints: 'on'
            archive_mode: 'on'
            archive_timeout: 300s
            archive_command: pghoard_postgres_command --mode archive --site default --host pghoard.default.svc.cluster.local --xlog %f
          #recovery_conf:
          #  restore_command: pghoard_postgres_command --mode restore --site default --host pghoard.default.svc.cluster.local --xlog %f --output %p
          use_pg_rewind: false
          use_slots: true
        retry_timeout: 5
        ttl: 15
      initdb:
      - encoding: UTF8
      pg_hba:
      - host replication standby 0.0.0.0/0 md5
      - host    all all 0.0.0.0/0 md5
      users:
        admin:
          options:
          - createrole
          - createdb
          password: ${ADMINPASS}
    etcd:
      host: ${ETCD_HOST}:2379
      scope: ${CLUSTERNAME}
      ttl: 15
    postgresql:
      authentication:
        replication:
          password: ${REPLICATIONPASS}
          username: standby
        superuser:
          password: ${SUPERPASS}
          username: postgres
      callbacks:
        on_restart: /scripts/callback_role.py
        on_role_change: /scripts/callback_role.py
        on_start: /scripts/callback_role.py
        on_stop: /scripts/callback_role.py
      connect_address: ${LOOKUP}:5432
      create_replica_method:
      #- pghoard
      - basebackup
      pghoard:
        command: /opt/scripts/pghoard_restore.py
        config: /opt/pghoard/pghoard.json
        no_master: true
      data_dir: /pgdata/data
      listen: 0.0.0.0:5432
      name: ${NODE}
      scope: ${CLUSTERNAME}
    restapi:
      connect_address: ${LOOKUP}:8008
      listen: 0.0.0.0:8008
    scope: ${CLUSTERNAME}
  pghoard.json: |-
    {
        "backup_location": "/tmp",
        "backup_sites": {
            "default": {
                "pg_data_directory": "/var/lib/postgresql/data",
                "nodes": [
                    {
                        "host": "pgread.default.svc.cluster.local",
                        "port": "5432",
                        "user": "standby",
                        "password": "atomic"
                    }
                ],
                "object_storage": {
                    "storage_type": "google",
                    "project_id": "alex-kerney",
                    "bucket_name": "pghoard.riverflo.ws",
                    "credential_file": "/tmp/pghoard/pghoard-riverflows.json"
                }
            }
        }
    }
kind: ConfigMap
metadata:
  name: patroni-pghoard
  namespace: default