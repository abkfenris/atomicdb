bootstrap:
  dcs:
    loop_wait: 5
    maximum_lag_on_failover: 104857600
    postgresql:
      parameters:
        hot_standby: 'on'
        log_destination: 'stderr'
        logging_collector: 'off'
        max_connections: 100
        max_replication_slots: 12
        max_wal_senders: 12
        wal_keep_segments: 8
        wal_level: hot_standby
        wal_log_hints: 'on'
        archive_mode: 'on'
        archive_timeout: 300s
        archive_command: envdir /opt/wale/ wal-e wal-push %p
      recovery_conf:
        restore_command: envdir /opt/wale/ wal-e wal-fetch --prefetch=16 %f %p
      #  recovery_target_timeline: latest
      #  recovery_target_action: promote
      use_pg_rewind: true
      use_slots: true
    retry_timeout: 5
    ttl: 15
  initdb:
  - encoding: UTF8
  - data-checksums
  pg_hba:
  - host replication standby 0.0.0.0/0 md5
  - host    all all 0.0.0.0/0 md5
  users:
    admin:
      options:
      - createrole
      - createdb
      password: ${ADMINPASS}
etcd:
  host: ${ETCD_HOST}:2379
  scope: ${CLUSTERNAME}
  ttl: 15
postgresql:
  authentication:
    replication:
      password: ${REPLICATIONPASS}
      username: standby
    superuser:
      password: ${SUPERPASS}
      username: postgres
  callbacks:
    on_restart: /scripts/callback_role.py
    on_role_change: /scripts/callback_role.py
    on_start: /scripts/callback_role.py
    on_stop: /scripts/callback_role.py
  connect_address: ${LOOKUP}:5432
  #recovery_conf:
  #  restore_command: pghoard_postgres_command --mode restore --site default --host ${PGHOARD_SERVICE_HOST} --xlog %f --output %p
  #  recovery_target_timeline: latest
  #  recovery_target_action: promote
  create_replica_method:
  #- pghoard
  - basebackup
  pghoard:
    command: python3 /opt/pghoard/pghoard_restore.py
    config: /opt/pghoard/pghoard.json
    no_master: true
  data_dir: /pgdata/data
  listen: 0.0.0.0:5432
  name: ${NODE}
  scope: ${CLUSTERNAME}
restapi:
  connect_address: ${LOOKUP}:8008
  listen: 0.0.0.0:8008
scope: ${CLUSTERNAME}